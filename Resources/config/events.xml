<?xml version="1.0" encoding="UTF-8" ?>

<!--
 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.
-->

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="fos_comment.listener.comment_vote_score" class="FOS\CommentBundle\EventListener\CommentVoteScoreListener">
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.vote.pre_persist" method="onVotePersist" />
        </service>

        <service id="fos_comment.listener.thread_counters" class="FOS\CommentBundle\EventListener\ThreadCountersListener">
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.comment.pre_persist" method="onCommentPersist" />
        </service>

        <service id="fos_comment.listener.thread_permalink" class="FOS\CommentBundle\EventListener\ThreadPermalinkListener" scope="request">
            <argument type="service" id="request" />
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.thread.create" method="onThreadCreate" />
        </service>

        <service id="fos_comment.listener.comment_blamer" class="FOS\CommentBundle\EventListener\CommentBlamerListener">
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.comment.pre_persist" method="blame" />
            <argument type="service" id="security.context" on-invalid="null" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="fos_comment.listener.vote_blamer" class="FOS\CommentBundle\EventListener\VoteBlamerListener">
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.vote.pre_persist" method="blame" />
            <argument type="service" id="security.context" on-invalid="null" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <service id="fos_comment.listener.closed_threads" class="FOS\CommentBundle\EventListener\ClosedThreadListener">
            <!-- TODO: 2.1 <tag name="kernel.event_subscriber" /> -->
            <tag name="kernel.event_listener" event="fos_comment.comment.pre_persist" method="onCommentPersist" />
        </service>
    </services>
</container>
